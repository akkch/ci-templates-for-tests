name: Build and Release NuGet Package (.NET Framework 4.8.1)

on:
  workflow_call:
    inputs:
      project_path:
        required: true
        type: string
      nuspec_path:
        required: true
        type: string
      solution_path:
        required: true
        type: string
      runner_label:
        type: string
        required: false
        default: 'windows-latest'
      artifact_name:
        type: string
        required: false
      artifact_path:
        type: string
        required: false
        
    secrets:
      token:
        required: true

jobs:
  build:
    runs-on: ${{ inputs.runner_label }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Conditionally download artifact
        if: ${{ inputs.artifact_name && inputs.artifact_path }}
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ inputs.artifact_path }}
          
      - name: Setup NuGet CLI
        uses: NuGet/setup-nuget@v1

      - name: Add internal NuGet feed
        shell: pwsh
        run: |
          nuget sources add `
            -Name "internal" `
            -Source "https://nuget.pkg.github.com/akkch/index.json" `
            -Username "${{ github.actor }}" `
            -Password "${{ secrets.token }}" `
            -StorePasswordInClearText
            
      - name: Update version in .nuspec from tag
        shell: pwsh
        run: |
          # get version from tag (remove 'v')
          $version = "${{ github.ref_name }}".TrimStart("v")
          Write-Host "Version from tag: $version"
          (Get-Content "${{ inputs.nuspec_path }}" -Raw) -replace '<version>.*?</version>', "<version>$version</version>" |
          Set-Content "${{ inputs.nuspec_path }}" -Encoding utf8

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1
        
      - name: Restore packages
        run: nuget restore "${{ inputs.solution_path }}"

      - name: Build project
        run: msbuild "${{ inputs.project_path }}" /p:Configuration=Release

      - name: Pack NuGet package
        run: nuget pack "${{ inputs.nuspec_path }}"

      #- name: Publish NuGet package to GitHub Packages (Private)
      #  run: nuget push *.nupkg -Source "internal" -ApiKey ${{ secrets.token }}

      - name: Publish to GitHub Packages
        run: |
          # Add GitHub Packages as a NuGet source.
          # The username is your GitHub username or organization name.
          # The password is the GITHUB_TOKEN.
          # The store-password-in-clear-text flag is safe to use in the ephemeral Actions runner.
          nuget sources Add -Name "github" -Source "https://nuget.pkg.github.com/akkch/index.json" -UserName "akkch" -Password "${{ secrets.GITHUB_TOKEN }}" -StorePasswordInClearText

          # Push the package. The ApiKey can be any non-empty string, but using the token is standard.
          # The source name 'github' must match the name you added above.
          nuget push *.nupkg -Source "github" -ApiKey "${{ secrets.GITHUB_TOKEN }}" -NoSymbols
